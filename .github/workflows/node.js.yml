# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CryptoBase CI AND CD

on:
  push:
    branches: [ main ]


jobs:
  build:

    runs-on: ubuntu-latest
      
    strategy:
      matrix:
        node-version: [14.17.0]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
    - name : Run the Node JS App
      working-directory: ./Backend
      run: |
          npm ci
          npm run build --if-present
          npm test

  deploy:
    
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build, Push and Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name:  ${{ secrets.HEROKU_APP_NAME }} #Must be unique in Heroku
          heroku_email:  ${{ secrets.HEROKU_EMAIL_ID }}
          usedocker: true
          appdir: "Backend"
  
  build_front:

    needs: deploy
    runs-on: ubuntu-latest
      
    strategy:
      matrix:
        node-version: [14.17.0]

    steps:
      - name: Checkout the branch
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }} for frontend
        uses: actions/setup-node@v2
      - name : Run the Node JS App
        working-directory: ./Frontend
        run: |
          npm i -f
  
  deploy_front:
    
    needs: build_front
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build, Push and Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name:  ${{ secrets.HEROKU_APP_FRONT_NAME }} #Must be unique in Heroku
          heroku_email:  ${{ secrets.HEROKU_EMAIL_ID }}
          usedocker: true
          appdir: "Frontend"
  
          

         

      
    
